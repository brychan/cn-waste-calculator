{"version":3,"sources":["components/Header.js","components/AddedIngredientAmountInput.js","components/AddedIngredient.js","components/AddedIngredientsList.js","components/SearchInput.js","components/FilteredIngredient.js","components/FilteredIngredientsList.js","components/SearchResults.js","components/SearchBox.js","App.js","serviceWorker.js","index.js"],"names":["Header","Row","className","Col","this","props","total","toFixed","list","length","Button","color","onClick","handleRemoveAll","React","Component","AddedIngredientAmountInput","handleChange","bind","event","handleAmountChange","target","value","ingredient","listId","InputGroup","Input","type","name","placeholder","amountInput","onChange","InputGroupAddon","addonType","tabIndex","handleDelete","AddedIngredient","console","log","key","badge","unit","xs","AddedIngredientsList","map","item","SearchInput","onInputChange","innerRef","inputRef","currentValue","FilteredIngredient","handleAdd","searchInputRef","focus","FilteredIngredientsList","Container","fluid","searchableId","SearchResults","native","force","config","tension","friction","precision","to","height","toggle","display","aprops","div","style","SearchBox","onToggle","setState","state","ingredientInput","results","handleClose","lowerCaseValue","toLowerCase","filter","includes","getResults","resultsAmount","button","role","version","id","xmlns","x","y","width","viewBox","transform","fill","d","el","renderCollapseButton","App","allIngredients","addedIngredients","isLoading","fetch","then","res","text","createSearchableTable","JSON","parse","response","table","ingredients","forEach","uuidv4","avgPrice","average_price_unit","weightPerUnit","weight_per_unit","push","processedIngredients","pIngredient","baseIngredient","find","o","yield","recipes","recipe","output_weight","price","recipesIngredients","ri","id_item","amount","output_weight_unit","batchWeight","callAPI","addedIngredient","reduce","acc","parseFloat","calculateTotal","updatedList","updatedItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10ab72e6.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Button } from 'reactstrap';\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Row className=\"w-100\">\n\t\t\t\t<Col className=\"text-left ml-3\">\n\t\t\t\t\t<span className=\"h2 display-8\">Total { this.props.total.toFixed(1) }kr</span>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"float-right col-auto\">\n\t\t\t\t\t{ this.props.list.length > 0 && (\n\t\t\t\t\t<Button \n\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\tonClick = { () => this.props.handleRemoveAll() }>\n\t\t\t\t\t\tRemove all({this.props.list.length})\n\t\t\t\t\t</Button> \n\t\t\t\t\t)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t);\n\t}\n}\n\nexport default Header;","import React from 'react';\nimport { Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\n\nclass AddedIngredientAmountInput extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tthis.props.handleAmountChange(event.target.value, this.props.ingredient.listId);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t<InputGroup>\n\t\t\t<Input \n\t\t\t\ttype=\"text\" \n\t\t\t\tname=\"amount\"\n\t\t\t\tplaceholder=\"0\"\n\t\t\t\tvalue={ this.props.ingredient.amountInput > 0 ? this.props.ingredient.amountInput : ''} \n\t\t\t\tonChange={ this.handleChange } />\n\t        <InputGroupAddon addonType=\"append\">\n\t          \t<Button \n\t          \t\tcolor=\"danger\"\n\t          \t\ttabIndex=\"-1\"\n\t          \t\tonClick = { () => this.props.handleDelete(this.props.ingredient.listId) }>\n\t          \t\tX\n\t          \t</Button>\n\t        </InputGroupAddon>\n      \t</InputGroup>\n\n\t\t);\n\t}\n}\n\nexport default AddedIngredientAmountInput;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport AddedIngrentAmountInput from './AddedIngredientAmountInput';\n\nclass AddedIngredient extends React.Component {\n\n\tcomponentWillLeave() {\n\t\tconsole.log('AddedIngredient Will Leave');\n\t}\n\trender() {\n\tconst badge = () => {\n\t\tswitch(this.props.ingredient.type) {\n\t\t  case 'recipe':\n\t\t\treturn <span className=\"badge badge-pill badge-info mx-2\">\n\t\t\t\tRecipe\n\t\t\t</span>\n\t\t  case 'processedIngredient':\n\t\t\treturn <span className=\"badge badge-pill badge-success mx-2\">\n\t\t\t\tProcessed\n\t\t\t</span>\n\t\t  default:\n\t\t\treturn <span className=\"badge badge-pill badge-warning mx-2\">\n\t\t\t\tIngredient\n\t\t\t</span>\n\t\t} \n\t}\n\treturn (\n\t\t<Row \n\t\t\tkey={ this.props.ingredient.listId }\n\t\t\tclassName=\"border-bottom py-1\">\n\t\t\t<Col className=\"align-self-center\">\n\t\t\t\t{ this.props.ingredient.name }\n\t\t\t\t{ badge() }\n\t\t\t\t<br/>\n\t\t\t\t<small className=\"text-muted\">Add amount in <b>{ this.props.ingredient.unit }</b>.</small>\n\t\t\t</Col>\n\t\t\t<Col xs=\"4\" className=\"align-self-center\">\n\t\t\t\t<AddedIngrentAmountInput\n\t\t\t\t\t//currentValue = {1}\n\t\t\t\t\tingredient = { this.props.ingredient }\n\t\t\t\t\tamountInput = { this.props.amountInput }\n\t\t\t\t\thandleAmountChange = { this.props.handleAmountChange }\n\t\t\t\t\thandleDelete = { this.props.handleDelete } />\n\t\t\t</Col>\n\t\t</Row>\n\t);\n\t}\n}\n\nexport default AddedIngredient;","import React from 'react';\nimport AddedIngredient from './AddedIngredient';\n\nclass AddedIngredientsList extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{(this.props.list.length > 0) ? \n\t\t\t\t\t\tthis.props.list.map( (item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<AddedIngredient\n\t\t\t\t\t\t\t\t\tkey = {item.listId}\n\t\t\t\t\t\t\t\t\tingredient = { item }\n\t\t\t\t\t\t\t\t\tamountInput = { this.props.amountInput } \n\t\t\t\t\t\t\t\t\thandleDelete = { this.props.handleDelete }\n\t\t\t\t\t\t\t\t\thandleAmountChange = { this.props.handleAmountChange } \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}) \n\t\t\t\t\t:\n\t\t\t\t\t\t<div className=\"py-3\">\n\t\t\t\t\t\t\tNo items added.\n\t\t\t\t\t\t</div>\n\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default AddedIngredientsList;\n","import React from 'react';\nimport { Input } from 'reactstrap';\n\nclass SearchInput extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tthis.props.onInputChange(event.target.value);\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<Input \n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Type an ingredient...\" \n\t\t\t\tname=\"ingredient\"\n\t\t\t\t///change search input\n\t\t\t\tinnerRef = { this.props.inputRef }\n\t\t\t\tclassName=\"my-1 mx-0 px-3 text-white border-0 bg-secondary\" \n\t\t\t\tvalue={ this.props.currentValue } \n\t\t\t\tonChange={ this.handleChange } />\n\t\t);\n\t}\n}\n\nexport default SearchInput;","import React from 'react';\nimport { Row, Col, Button } from 'reactstrap';\n\nclass FilteredIngredient extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleAdd = this.handleAdd.bind(this);\n\t}\n\n\thandleAdd() {\n\t\tthis.props.handleAdd(this.props.ingredient);\n\t\tthis.props.searchInputRef.focus();\n\t}\n\n\trender() {\n\t\tconst badge = () => {\n\t\t\tswitch(this.props.ingredient.type) {\n\t\t\t  case 'recipe':\n\t\t\t\treturn <span className=\"badge badge-pill badge-info mx-2\">\n\t\t\t\t\tRecipe\n\t\t\t\t</span>\n\t\t\t  case 'processedIngredient':\n\t\t\t\treturn <span className=\"badge badge-pill badge-success mx-2\">\n\t\t\t\t\tProcessed\n\t\t\t\t</span>\n\t\t\t  default:\n\t\t\t\treturn <span className=\"badge badge-pill badge-warning mx-2\">\n\t\t\t\t\tIngredient\n\t\t\t\t</span>\n\t\t\t} \n\t\t}\n\n\t\treturn(\n\t\t\t<Row className=\"border-top border-secondary py-1\">\n\t\t\t\t<Col className=\"align-self-center\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{this.props.ingredient.name}\n\t\t\t\t\t</span>\n\t\t\t\t\t{ badge() }\n\t\t\t\t</Col>\n\t\t\t\t<Col xs=\"3\" className=\"float-right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"float-right\" \n\t\t\t\t\t\tcolor=\"info\"\n\t\t\t\t\t\tonClick={ this.handleAdd }>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default FilteredIngredient;","import React from 'react';\nimport { Container } from 'reactstrap';\n\nimport FilteredIngredient from './FilteredIngredient';\n\nclass FilteredIngredientsList extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<Container fluid={true} className=\"px-0\">\n\t\t\t\t{ this.props.list.map((item) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FilteredIngredient \n\t\t\t\t\t\t\tkey = { item.searchableId }\n\t\t\t\t\t\t\tingredient = { item }\n\t\t\t\t\t\t\thandleAdd = { this.props.handleAdd } \n\t\t\t\t\t\t\tsearchInputRef = { this.props.searchInputRef }/>);\n\t\t\t\t})} \n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default FilteredIngredientsList;","import React from 'react';\nimport { Spring, animated } from 'react-spring/renderprops';\n//import { useTransition, animated } from 'react-spring';\nimport FilteredIngredientsList from './FilteredIngredientsList';\n\n\n\nfunction SearchResults(props) {\n  /*const animationProps = useSpring({\n      dspl: props.toggle ? 1 : 0,\n      height: props.toggle ? 'auto' : 0, \n      //opacity: props.toggle ? 1 : 0,\n  })*/\n\t//return (\n    /*<animated.div \n      style={{\n        ...animationProps,\n        display: animationProps.dspl.interpolate((displ) =>\n          displ === 0 ? 'none' : 'initial'\n        ),\n      }}>\n\n\n    <FilteredIngredientsList  \n                  list={ props.list }\n                  handleAdd = { props.handleAdd } />\n    </animated.div>);*/\n\t\t\t/*return (<Spring\n            native\n            force\n            config={{ tension: 2000, friction: 100, precision: 1 }}\n            to={{ height: props.toggle ? 'auto' : 0, opacity: props.toggle ? 1 : 0 }}>\n            { animationProps => (\n              <animated.div \n                className=\"item\" \n                style={{\n                  ...animationProps,\n                  display: props.toggle ? 'initial' : 'none'\n                }}>\n        \t\t\t\t<FilteredIngredientsList  \n                  list={ props.list }\n                  handleAdd = { props.handleAdd } />\n              </animated.div>\n            )}\n      </Spring>);*/\n\n      return <Spring\n            native\n            force\n            config={{ tension: 2000, friction: 100, precision: 1 }}\n            to={{ \n              height: props.toggle ? 'auto' : 0,\n              display: props.toggle ? 'block' : 'none'\n            }}>\n            {aprops => (\n              <animated.div className=\"item\" style={aprops}>\n                <FilteredIngredientsList  \n                  list={ props.list }\n                  handleAdd = { props.handleAdd }\n                  searchInputRef = { props.searchInputRef } />\n              </animated.div>\n            )}\n          </Spring>\n\n\n\n}\n\nexport default SearchResults;","import React from 'react';\n\nimport { Row, Col, Button } from 'reactstrap';\n\nimport SearchInput from './SearchInput';\nimport SearchResults from './SearchResults';\n\nclass SearchBox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t      ingredientInput: '',\n\t      results: [],\n\t      toggle: true,\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n\t}\n\n\tgetResults(value) {\n\t\tlet lowerCaseValue = value.toLowerCase();\n\t\tlet results = this.props.list.filter((ingredient) => ingredient.name.toLowerCase().includes(lowerCaseValue));\n\t\treturn results;\n\t}\n\n\thandleChange(value) {\n\t\tthis.setState({ ingredientInput: value });\n\t\tif ( value.length == 0 ){\n\t\t\tthis.setState({ results: [], toggle:true });\n\t\t}\n\t\tif ( value.length >= 3 ) {\n\t\t\tlet results = this.getResults(value);\n\t\t\tthis.setState({ results: results, toggle: true });\n\t\t}\n\t}\n\n\n\thandleClose() {\n\t\tthis.setState({ ingredientInput: '',\n\t\t\t\t\t\tresults: [], \n\t\t\t\t\t});\n\t}\n\n\tonToggle = () => {\n\t\tthis.setState(state => ({ toggle: !state.toggle }))\n\t}\n\n\trenderCollapseButton(resultsAmount) {\n\t\tlet button = null;\n\t\tif (resultsAmount > 0) {\n\t\t\tbutton = <div\n\t\t\t\t\t \tclassName=\"float-middle m-1 p-0 text-light\"\n\t\t\t\t\t \trole=\"button\"\n\t\t\t\t\t \tonClick={ this.onToggle }>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"-20px\"\n\t\t\t\t\t\t\t\t width=\"3rem\" height=\"1.5rem\" viewBox=\"0 0 451.847 451.847\" \n\t\t\t\t\t\t\t\t >\n\t\t\t\t\t\t\t<g>\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\ttransform=\"translate(0, 100)\" \n\t\t\t\t\t\t\t\t\tfill=\"white\" \n\t\t\t\t\t\t\t\t\td={ !this.state.toggle ? \n\t\t\t\t\t\t\t\t\t\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751 c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0 c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\"M248.292,106.406l194.281,194.29c12.365,12.359,12.365,32.391,0,44.744c-12.354,12.354-32.391,12.354-44.744,0 L225.923,173.529L54.018,345.44c-12.36,12.354-32.395,12.354-44.748,0c-12.359-12.354-12.359-32.391,0-44.75L203.554,106.4 c6.18-6.174,14.271-9.259,22.369-9.259C234.018,97.141,242.115,100.232,248.292,106.406z\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>;\n\t\t}\n\t\treturn button;\n\t}\n\n\trender () {\n\n\t\treturn (\n\t\t\t<Col>\n\t\t\t\t<Col className=\"w-100 bg-dark\">\n\t\t\t\t\t<SearchInput\n\t\t\t\t\t\tcurrentValue={this.state.ingredientInput} \n\t\t\t\t\t\tonInputChange={this.handleChange}\n\t\t\t\t\t\tinputRef = { el => this.searchInputRef = el } />\n\t\t\t\t</Col>\n\n\t\t\t\t<div className=\"w-100\"></div>\n\n\t\t\t\t<Col className=\"text-left bg-dark left-0 zindex-dropdown pb-2\">\n\t\t\t       <SearchResults \n\t\t\t\t\tlist={this.state.results}\n\t\t\t\t\ttoggle={this.state.toggle} \n\t\t\t\t\thandleAdd = { this.props.handleAdd }\n\t\t\t\t\tsearchInputRef = { this.searchInputRef } />\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t{ this.renderCollapseButton(this.state.results.length) }\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\n\t\t\t\t<div className=\"w-100\"></div>\n\n\n\t\t\t</Col>\n\t\t);\n\t}\n\n}\n\nexport default SearchBox;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Container, Row, Col } from 'reactstrap';\n\n\nimport Header from './components/Header';\nimport AddedIngredientsList from './components/AddedIngredientsList';\nimport SearchBox from './components/SearchBox';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allIngredients: [],\n      addedIngredients: [],\n      total: 0,\n      isLoading: true,\n    }\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleAmountChange = this.handleAmountChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleRemoveAll = this.handleRemoveAll.bind(this);\n  }\n  callAPI() {\n    let PROD_URL = \"https://ingredientsbook-api.herokuapp.com/book\";\n    let DEV_URL = \"http://192.168.1.159:9001/book\";\n    fetch( process.env.NODE_ENV === \"development\" ? DEV_URL : PROD_URL )\n      .then(res => res.text())\n      .then(res => {\n        this.setState({ allIngredients: this.createSearchableTable(JSON.parse(res)) });\n      });\n  }\n  createSearchableTable(response) {\n    /*\n      Parse all to one single searchable table with\n      id, name, avg price, unit, TYPE (for highlighting recipe etc.)\n    */\n\n    let table = [];\n    response.ingredients.forEach((ingredient) => {\n      let item = {\n        id: ingredient.id,\n        searchableId: uuidv4(),\n        name: ingredient.name,\n        avgPrice: ingredient.average_price_unit,\n        unit: ingredient.unit,\n        weightPerUnit: ingredient.weight_per_unit,\n        type: 'ingredient'\n      }\n      table.push(item);\n    });\n    response.processedIngredients.forEach((pIngredient) => {\n      let baseIngredient = table.find( o => o.id === pIngredient.ingredient && o.type === 'ingredient');\n      let item = {\n        id: pIngredient.id,\n        searchableId: uuidv4(),\n        name: pIngredient.name,\n        avgPrice: baseIngredient.avgPrice / pIngredient.yield,\n        unit: baseIngredient.unit,\n        type: 'processedIngredient'\n      }\n      table.push(item);\n    });\n    response.recipes.forEach((recipe) => {\n      let output_weight = 0;\n      let price = 0;\n      response.recipesIngredients.forEach((ri) => {\n        if (recipe.id === ri.recipe) {\n          let ingredient = null; \n          if (ri.type === 'i') {\n            ingredient = table.find( o => o.id === ri.id_item && o.type === 'ingredient');\n          } else {\n            ingredient = table.find( o => o.id === ri.id_item && o.type === 'processedIngredient');\n          }\n          price = ingredient ? ((ingredient.avgPrice * ri.amount) + price) : price;\n          output_weight = output_weight + ( ri.amount * ingredient.weightPerUnit );\n        }\n      });\n      let item = {\n        id: recipe.id,\n        searchableId: uuidv4(),\n        name: recipe.name,\n        avgPrice: price / output_weight,\n        unit: recipe.output_weight_unit,\n        batchWeight: output_weight,\n        type: 'recipe'\n      }\n      table.push(item);\n    })\n    this.setState({ isLoading: false });\n    return table;\n  }\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  handleAdd(ingredient){\n    let addedIngredient = {\n      ...ingredient,\n      amountInput: 0,\n      listId: uuidv4(),\n    }\n    this.setState({ \n      addedIngredients: [...this.state.addedIngredients, addedIngredient],\n    });\n\n  }\n\n  calculateTotal(list){\n    let total = list.reduce((acc, item) => parseFloat(acc) + (parseFloat(item.avgPrice) * parseFloat(item.amountInput ? item.amountInput : 0)), 0);\n    return total;\n  }\n\n  handleDelete(id) {\n      let addedIngredients = this.state.addedIngredients.filter(item =>  item.listId !== id );\n      let total = this.calculateTotal(addedIngredients);\n      this.setState({ addedIngredients, total });\n  }\n\n  handleAmountChange(value, id){\n    let total = 0;\n    let updatedList = this.state.addedIngredients.map((item) => {\n        if (item.listId === id) {\n          const updatedItem = {\n            ...item,\n            amountInput: value\n          }\n          total += value * item.avgPrice;\n          return updatedItem;\n        }\n      total += item.amountInput * item.avgPrice;\n      return item;\n    });\n    this.setState({ addedIngredients:updatedList, total });\n  }\n\n  handleRemoveAll(){\n    this.setState({ addedIngredients: [], total: 0});\n  }\n\n  render() {\n    return (\n      <Container className=\"themed-container container-width\">\n        <Row className=\"text-white bg-dark text-center pt-1\">\n          <Header \n            handleRemoveAll={ this.handleRemoveAll }\n            list = { this.state.addedIngredients }\n            total={ this.state.total } />\n        </Row>\n        <Row className=\"text-white bg-dark text-center\">\n         <SearchBox\n              list={ this.state.allIngredients }\n              handleAdd={ this.handleAdd } />\n        </Row>\n        <Row>\n          <Col>\n          { this.state.isLoading ? 'Loading data, it might take a minute...' : '' }\n            <AddedIngredientsList \n              list={ this.state.addedIngredients }\n              amountInput = {0}\n              handleDelete = { this.handleDelete }\n              handleAmountChange={ this.handleAmountChange }/>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"small\">Last updated: 12/2020.</Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}